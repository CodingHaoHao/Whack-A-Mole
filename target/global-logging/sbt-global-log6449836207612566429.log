[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Win10\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Win10\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 1.8.0_401)
[debug] Load.defaultLoad until apply took 121.1425ms
[debug]           Load.loadUnit: plugins took 155.7507ms
[debug]           Load.loadUnit: defsScala took 0.3582ms
[debug] [Loading] Scanning directory C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project
[debug]             Load.loadUnit: mkEval took 5.6655ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.1505 ms
[info] loading settings for project finalprojectv2-codinghaohao-build from idea.sbt ...
[debug]               Load.resolveProject(finalprojectv2-codinghaohao-build) took 54.6371ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalprojectv2-codinghaohao-build, base: C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project, plugins: List(<none>))) took 104.1642ms
[debug] [Loading] Done in C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project, returning: (finalprojectv2-codinghaohao-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 339.9753ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.0239ms
[debug]         Load.loadUnit(file:/C:/Users/Win10/Documents/GitHub/finalprojectv2-CodingHaoHao/project/, ...) took 508.3523ms
[debug]       Load.apply: load took 626.4435ms
[debug]       Load.apply: resolveProjects took 5.0775ms
