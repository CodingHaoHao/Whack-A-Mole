[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Win10\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Win10\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 1.8.0_401)
[debug] Load.defaultLoad until apply took 133.6981ms
[debug]           Load.loadUnit: plugins took 201.1322ms
[debug]           Load.loadUnit: defsScala took 0.2329ms
[debug] [Loading] Scanning directory C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project
[debug]             Load.loadUnit: mkEval took 9.1214ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.7474 ms
[info] loading settings for project finalprojectv2-codinghaohao-build from idea.sbt ...
[debug]               Load.resolveProject(finalprojectv2-codinghaohao-build) took 39.5025ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalprojectv2-codinghaohao-build, base: C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project, plugins: List(<none>))) took 57.4959ms
[debug] [Loading] Done in C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project, returning: (finalprojectv2-codinghaohao-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3461.5622ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.1337ms
[debug]         Load.loadUnit(file:/C:/Users/Win10/Documents/GitHub/finalprojectv2-CodingHaoHao/project/, ...) took 3673.1998ms
[debug]       Load.apply: load took 3777.0233ms
[debug]       Load.apply: resolveProjects took 4.1446ms
[debug]       Load.apply: finalTransforms took 42.8959ms
[debug]       Load.apply: config.delegates took 4.4995ms
[debug]       Load.apply: Def.make(settings)... took 329.8581ms
[debug]       Load.apply: structureIndex took 192.4909ms
[debug]       Load.apply: mkStreams took 1.5787ms
[info] loading project definition from C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6893.1802ms
[debug]     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao
[debug]       Load.loadUnit: mkEval took 0.3481ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0668 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 21.1375ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao, plugins: List(<none>))) took 24.3046ms
[debug] [Loading] Done in C:\Users\Win10\Documents\GitHub\finalprojectv2-CodingHaoHao, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1209.25ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.6944ms
[debug]   Load.loadUnit(file:/C:/Users/Win10/Documents/GitHub/finalprojectv2-CodingHaoHao/, ...) took 8110.1107ms
[debug] Load.apply: load took 8125.527ms
[debug] Load.apply: resolveProjects took 0.0691ms
[debug] Load.apply: finalTransforms took 27.9474ms
[debug] Load.apply: config.delegates took 0.2448ms
[debug] Load.apply: Def.make(settings)... took 85.4812ms
[debug] Load.apply: structureIndex took 29.3689ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to scalaFXIntro (in build file:/C:/Users/Win10/Documents/GitHub/finalprojectv2-CodingHaoHao/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50905 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50905, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scalaFXIntro (in build file:/C:/Users/Win10/Documents/GitHub/finalprojectv2-CodingHaoHao/)
[debug] > Exec(idea-shell, None, None)
